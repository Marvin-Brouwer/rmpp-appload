name: Build with RMPP Toolchain and Upload Releases

on:
  push:
    tags:
      - '*'

jobs:
  build:
    strategy:
      matrix:
        os: ["eeems/remarkable-toolchain:latest-rmpp", "eeems/remarkable-toolchain:latest-rm2"]
        include:
          - os: "eeems/remarkable-toolchain:latest-rmpp"
            arch: aarch64-unknown-linux-gnu
            zip_name: extensions-aarch64.zip
            dlfile_url: "https://github.com/asivery/dlfile/releases/latest/download/dlfile-aarch64"
          - os: "eeems/remarkable-toolchain:latest-rm2"
            arch: armv7-unknown-linux-gnueabihf
            zip_name: extensions-arm32-testing.zip
            dlfile_url: "https://github.com/asivery/dlfile/releases/latest/download/dlfile-armv7hf"
    runs-on: ubuntu-latest

    container:
        image: ${{ matrix.os }}

    steps:
        - name: Checkout Code
          uses: actions/checkout@v3
          with:
            submodules: true

        - name: Install QMake
          run: >-
            apt-get update

            apt-get install -y
            qt5-qmake 
            qtbase5-dev 
            qtbase5-dev-tools 
            libqt5svg5-dev 
            libqt5webenginewidgets5 
            libqt5webchannel5-dev 
            qtwebengine5-dev
            qt6-base-dev
            
            qtchooser -install qt6 $(which qmake6)

            export QT_SELECT=qt6

        - name: Build Application
          run: |
            chmod a+x ./make.sh
            ./make.sh
          working-directory: ./xovi

        - name: Upload Build Artifact
          uses: actions/upload-artifact@v4
          with:
            name: ${{ matrix.zip_name }}
            path: ${{ matrix.zip_name }}

  release:
    runs-on: ubuntu-latest
    needs: build
    steps:
        - name: Download Build Artifacts
          uses: actions/download-artifact@v4
          with:
            path: ./

        - name: Create Release
          uses: actions/create-release@v1
          id: create_release_step
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          with:
            draft: false
            prerelease: false
            release_name: ${{ github.event.release.tag_name }}
            tag_name: ${{ github.ref }}

        - name: Upload Release Assets
          uses: actions/upload-release-asset@v1
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          with:
            upload_url: ${{ steps.create_release_step.outputs.upload_url }}
            asset_path: extensions-aarch64.zip/extensions-aarch64.zip
            asset_name: extensions-aarch64.zip
            asset_content_type: application/octet-stream

        - name: Upload Release Assets (ARM32)
          uses: actions/upload-release-asset@v1
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          with:
            upload_url: ${{ steps.create_release_step.outputs.upload_url }}
            asset_path: extensions-arm32-testing.zip/extensions-arm32-testing.zip
            asset_name: extensions-arm32-testing.zip
            asset_content_type: application/octet-stream